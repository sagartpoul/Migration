/*
*	author : root
*	date : Tue Oct 06 12:11:49 IST 2015
*	Description : building ACCOUNT
*/
DECLARE
--FIXED VARIABLES
	v_STAGE NUMBER := 0;
	v_STAGE_TITLE VARCHAR2(50) := 'ACCOUNT INSERT1';
	c_LOG_FILE_NAME VARCHAR2(30) := 'ACCOUNT1.txt';
	c_LOG_FILE_INSERT VARCHAR2(30) := 'ACCOUNT_INSERT_LOG1.txt';
	v_ExistCount NUMBER := 0;
	v_oFile UTL_FILE.FILE_TYPE;
	v_oFile_INSERT UTL_FILE.FILE_TYPE;
	c_REC SYS_REFCURSOR;
	rec_CONFIG CSV_CONFIG%ROWTYPE;
	C_REC_GLMAP GLMAP%ROWTYPE;
	--rec_CUST_MST CUST_MST%ROWTYPE;
	--rec_ACC_MST ACC_MST%ROWTYPE;
	v_BRCODE NUMBER(4,0);
-- COUNTER SPECIFIC
	v_SUCCESS_COUNT NUMBER(7,0) := 0;
	v_FAILURE_COUNT NUMBER(7,0) := 0;
	v_TOTAL_COUNT NUMBER(7,0) := 0;
--OBJECT DEPENDENT
	v_POST_UR_ID NUMBER(4, 0);
	v_POST_UR_TIME NUMBER(4, 0);
	v_PASS_UR_ID NUMBER(4, 0);
	v_PASS_UR_TIME NUMBER(4, 0);
	v_BR_CODE NUMBER(4, 0);
	v_ACTNO VARCHAR2(13);
	v_STATUS VARCHAR2(1);
	v_CSL_CODE NUMBER(6);
	v_RSTATUS VARCHAR2(1);
	v_IR_NO NUMBER(6, 0);
	v_TRAN_DATE DATE;
	v_TRAN_NO NUMBER(6, 0);
	v_CATA_CODE VARCHAR2(4);
	v_CUST_ID VARCHAR2(13);
	v_MINOR_CUSTID VARCHAR2(13);
	v_SH_NAME VARCHAR2(20);
	v_LONG_NAME VARCHAR2(40);
	v_F_NAME VARCHAR2(20);
	v_M_NAME VARCHAR2(20);
	v_L_NAME VARCHAR2(20);
	v_CONST_CODE VARCHAR2(1);
	v_GUAR_NAME VARCHAR2(35);
	v_GUAR_REL VARCHAR2(1);
	v_ATTACH_CODE VARCHAR2(1);
	v_FREEZ_CODE VARCHAR2(1);
	v_RISK_CATA VARCHAR2(1);
	v_KYC_FLAG VARCHAR2(1);
	v_AC_OP_DATE DATE;
	v_OPRN_MODE VARCHAR2(1);
	v_NPA_TAG VARCHAR2(1);
	v_INTRO_ACTNO VARCHAR2(13);
	v_NOMI_NAME VARCHAR2(35);
	v_NOMI_REL VARCHAR2(20);
	v_MINOR_TAG VARCHAR2(1);
	v_MG_NAME VARCHAR2(35);
	v_MG_REL VARCHAR2(1);
	v_MINOR_BIRTH_DT DATE;
	v_DORMANT_TAG VARCHAR2(1);
	v_FLASH_MESSG VARCHAR2(35);
	--v_FLASH_MESSG1 VARCHAR2(50);
	v_TYPEOFAC VARCHAR2(1);
	v_INSTCODE VARCHAR2(7);
	v_ISDEAF VARCHAR2(1);
	v_INT_UPTO_DT DATE;
	v_INT_ALLOW NVARCHAR2(1);
	v_CLOSE_DT DATE;
	v_accode VARCHAR2(6);
	v_CODE_NM VARCHAR2(25);
	v_TBL_TYPE VARCHAR2(10);
	v_TOTAL_WTN_OFF NUMBER(15, 2);
	v_PRN_WTN_OFF NUMBER(15, 2);
	v_WTN_SETTL_AMT NUMBER(15, 2);
-- OTHERS
	v_IS_FIRST_ENTRY BOOLEAN := FALSE;
	v_IS_DONE_FIRST_ENTRY BOOLEAN := TRUE;
	v_OBJECT_NAME VARCHAR2(30):= 'SHARES,1';
	v_FIRST_ENTRY_CNT NUMBER := 0;
	rec_GLMAP GLMAP%ROWTYPE;
	--c_REC_NOMINEE_LOG NOMINEE_LOG%ROWTYPE;
	---c_REC_RELATION relation_mst%ROWTYPE;
	v_ROWNO NUMBER;
	v_SKIPPED_REC_CNT NUMBER :=0;
	--c_REC_COMMON SYS_REFCURSOR;
	--c_REC_SHARES SYS_REFCURSOR;
	v_ACTNO_PREV VARCHAR2(13) := '#';
	v_SHARE_FAIL_CNT NUMBER(5,0) := 0;
	v_SAVING_FAIL_CNT NUMBER(5,0) := 0;
	v_FD_FAILT_CNT NUMBER(5,0) := 0;
	v_RECU_FAIL_CNT NUMBER(5,0) := 0;
	v_DAILY_FAIL_CNT NUMBER(5,0) := 0;
	v_BANK_FAIL_CNT NUMBER(5,0)  := 0;
	v_LOAN_FAIL_CNT NUMBER(5,0) := 0;
	v_ACTNO_NULL_CNT NUMBER(5,0) := 0;
	v_DUPLICATE_REC_CNT NUMBER := 0;
	REL_NAME VARCHAR2(50);
	v_CGL_CODE_PREV VARCHAR2(6) := '#';
	v_CSL_CODE_PREV NUMBER(6) := 0;
	v_PREV_SLCODE VARCHAR2(30):='#';
    v_SEQNO number(38) := 0;
	v_SEQNO1 number(38) := 0;
	PREV_ACCOUNT_CODE NUMBER ;
	PREV_SUB_ACCOUNT_CODE NUMBER;
	PREV_ROWNO NUMBER;
	v_NO VARCHAR2(6);
	v_CSL_CODE1 VARCHAR2(6);
	v_BRANCH_ID1 NUMBER;
	v_GL_CODE NUMBER;
	v_OLD_ACTNO VARCHAR2(25);
	v_STP_TRAN VARCHAR2(1);
	v_SPC_AC VARCHAR2(1);
	v_SH_CIBIL VARCHAR2(1);
	v_agent VARCHAR2(3);
	v_accode1 VARCHAR2(9);
	v_WRTN_OFF_ST VARCHAR2(1);
	v_SUIT_FLD_ST VARCHAR2(1);
	v_TEM_NOM VARCHAR2(50);
	
BEGIN
	v_oFile := UTL_FILE.FOPEN('CSV_OUTPUT_DIR',c_LOG_FILE_NAME,'a');
	UTL_FILE.PUTF(v_oFile,'-------MASTER INSERT : Start Time %s-------%\n',TO_CHAR(SYSTIMESTAMP, 'HH12:MI:SS.FF4 AM'));
	--STEP-1-START-GET BRANCH CODE
	v_STAGE  := 100;
	v_BRCODE := FUN_GET_ACTIVE_BRANCH_CODE();
	v_STAGE  := 200;
	SELECT * INTO rec_CONFIG FROM CSV_CONFIG
	WHERE BRCODE=v_BRCODE;
	--STEP-1-END-GET BRANCH CODE
	--STEP-2-START-DROP EXISTING TABLES
		v_STAGE  := 300;
		--DELETE FROM MASTER;
		--DELETE FROM BALANCE; 
		--DELETE FROM SIGNAUTH;
		--DELETE FROM CUSTREL;
		--DELETE FROM DORM_DET;
		
		COMMIT;
	--STEP-2-END-DELETE-RECORDS FROM EXISTING TABLE
		
	--STEP-3-START-PROCESS CURSOR AND CALL THE INSERT SCRIPT
	v_oFile_INSERT := UTL_FILE.FOPEN('CSV_OUTPUT_DIR',c_LOG_FILE_INSERT,'w');
	UTL_FILE.PUTF(v_oFile_INSERT,'-------INSERT STARTED: Start Time %s-------%\n',TO_CHAR(SYSTIMESTAMP, 'HH12:MI:SS.FF4 AM'));
	
	FOR c_REC IN
	(
		SELECT B.ACCATA,B.BE_IAT,C.LONG_NAME,C.SH_NAME,C.F_NAME,C.L_NAME,C.M_NAME,C.KYC_FLAG, A.* FROM PGMCUSTMST A INNER JOIN GLMAP B
		ON A.AGENTNO=B.BE_ACNO_PREFIX
		INNER JOIN CUSTOMER C ON
		A.BE_CUST_ID=C.CUST_ID ORDER BY A.AGENTNO,A.PGMCUSTNO
	)
	LOOP
			
			-- Start of TOTAL_COUNT
				v_STAGE  := 100;
				v_TOTAL_COUNT := v_TOTAL_COUNT + 1;
			 -- End of TOTAL_COUNT 
			 
			 
			-- Start of POST_UR_ID
				v_STAGE  := 200;
				BEGIN 
				SELECT BE_USERID INTO v_POST_UR_ID FROM CL_USERMST WHERE TRIM(UPPER(U_ID))=TRIM(UPPER(c_REC.OPID));
			EXCEPTION 
				WHEN OTHERS THEN 
				v_POST_UR_ID:=100;
			   --UTL_FILE.PUTF(v_oFile_INSERT,'-ERROR STAGE##%s ROWNO#%s Error-%s-%s\n',v_STAGE, c_REC.ROWNO,SQLCODE,SQLERRM);
			END;
			 -- End of POST_UR_ID
			 
			 -- START OF POST_UR_TIME
				v_STAGE:=300;
				v_POST_UR_TIME:=NULL;
			 -- END OF POST_UR_TIME
			 
			 -- START OF PASS_UR_ID
				v_STAGE:=400;
				BEGIN 
				SELECT BE_USERID INTO v_PASS_UR_ID FROM CL_USERMST WHERE TRIM(UPPER(U_ID))=TRIM(UPPER(c_REC.OFFID));
			EXCEPTION 
				WHEN OTHERS THEN 
				v_PASS_UR_ID:=100;
			   --UTL_FILE.PUTF(v_oFile_INSERT,'-ERROR STAGE##%s ROWNO#%s Error-%s-%s\n',v_STAGE, c_REC.ROWNO,SQLCODE,SQLERRM);
			END;
			 -- END OF PASS_UR_ID
			 
			 -- START OF PASS_UR_TIME
				v_STAGE:=500;
				v_PASS_UR_TIME:=NULL;
			 -- END OF PASS_UR_TIME
			 
			 -- START OF BR_CODE
				v_STAGE:=600;
				v_BR_CODE:=rec_CONFIG.BRCODE;
			 -- END OF BR_CODE
			 
			 -- START OF ACTNO
				v_STAGE:=700;
				v_ACTNO:=NULL;
				BEGIN
					v_ACTNO:=FUN_GET_BE_ACTNO(v_BRCODE,'530001',c_REC.AGENTNO,c_REC.PGMCUSTNO);
				EXCEPTION 
					WHEN OTHERS THEN
						UTL_FILE.PUTF(v_oFile_INSERT,'-ERROR STAGE##%s ROWNO#%s Error-%s-%s\n',v_STAGE, c_REC.ROWNO,SQLCODE,SQLERRM);
				END;
			 -- END OF ACTNO
			 
			 -- START OF STATUS
				v_STAGE:=800;
				v_STATUS:=NULL;
			 IF (c_REC.ACCLOSEDT IS NOT NULL) THEN
				 v_STATUS:='C';
				ELSE
				v_STATUS:='L';
		     END IF;
			 -- END OF STATUS
			 
			 -- START OF RSTATUS
				v_STAGE:=900;
				v_RSTATUS:=NULL;
			 -- END OF RSTATUS
			 
			 -- START OF IR_NO
				v_STAGE:=1000;
				v_IR_NO:=NULL;
			 -- END OF IR_NO
			 
			 -- START OF TRAN_DATE
				v_STAGE:=1100;
				v_TRAN_DATE:=TRUNC(c_REC.ACSTARTDT);
			 -- END OF TRAN_DATE
			 
			 -- START OF TRAN_NO
				v_STAGE:=1200;
				v_TRAN_NO:=NULL;
			 -- END OF TRAN_NO
		
			  -- START OF CATA_CODE
				v_STAGE:=1300;
				v_CATA_CODE:=c_REC.ACCATA;
			 -- END OF CATA_CODE
			
			 -- START OF CUST_ID
				v_STAGE:=1400;
				v_CUST_ID:=c_REC.BE_CUST_ID;
			 -- END OF CUST_ID
			
			 -- START OF MINOR_CUST_ID
				v_STAGE:=1500;
				v_MINOR_CUSTID:=NULL;
			 -- END OF MINOR_CUST_ID
			 
			 -- START OF SH_NAME
				v_STAGE:=1600;
				v_SH_NAME:=c_REC.SH_NAME;
			 -- END OF SH_NAME
			 
			 -- START OF LONG_NAME
				v_STAGE:=1700;
				v_LONG_NAME:=c_REC.LONG_NAME;
			 -- END OF LONG_NAME
			 
			  -- START OF F_NAME
				v_STAGE:=1800;
				v_F_NAME:=c_REC.F_NAME;
				v_M_NAME:=c_REC.M_NAME;
				v_L_NAME:=c_REC.L_NAME;
			 -- END OF F_NAME
			 
			 -- START OF CONST_CODE
				v_STAGE:=1900;
				v_CONST_CODE:=1;
			 -- END OF CONST_CODE
			 
			 -- START OF GUAR_NAME
				v_STAGE:=2000;
				v_GUAR_NAME:=NULL;
			 -- END OF GUAR_NAME
			 
			  -- START OF GUAR_REL
				v_STAGE:=2100;
				v_GUAR_REL:=NULL;
			 -- END OF GUAR_REL
			 
			 -- START OF ATTACH_CODE
				v_STAGE:=2200;
				v_ATTACH_CODE:=NULL;
			 -- END OF ATTACH_CODE
			 
			  -- START OF FREEZ_CODE
				v_STAGE:=2300;
				v_FREEZ_CODE:=NULL;
			 -- END OF FREEZ_CODE
			 
			 -- START OF RISK_CATA
				v_STAGE:=2400;
				v_RISK_CATA:='L';
			 -- END OF RISK_CATA
			 
			  -- START OF KYC_FLAG
				v_STAGE:=2500;
				v_KYC_FLAG:=c_REC.KYC_FLAG;
			 -- END OF KYC_FLAG
			
			  -- START OF AC_OP_DATE
				v_STAGE:=2600;
				v_AC_OP_DATE:=v_TRAN_DATE;
			 -- END OF AC_OP_DATE
			 
			  -- START OF OPRN_MODE
				v_STAGE:=2700;
				v_OPRN_MODE:='S';
			 -- END OF OPRN_MODE
			 
			  -- START OF NPA_TAG
				v_STAGE:=2800;
				v_NPA_TAG:=NULL;
			 -- END OF NPA_TAG
			
			  -- START OF INTRO_ACTNO
				v_STAGE:=2900;
				v_INTRO_ACTNO:=NULL;
			 -- END OF INTRO_ACTNO
			 
			 -- START OF NOMI_NAME
				v_STAGE:=3000;
				v_NOMI_NAME:=SUBSTR(TRIM(c_REC.NOMINEENAME),1,35);
			-- END OF NOMI_NAME
			 
			  -- START OF NOMI_REL
				v_STAGE:=3100;
				v_NOMI_REL:=SUBSTR(TRIM(c_REC.NOMINEERELATION),1,20);
			 -- END OF NOMI_REL
			 
			  -- START OF MINOR_TAG
				v_STAGE:=3200;
				v_MINOR_TAG:='N';
			 -- END OF MINOR_TAG
			 
			  -- START OF MG_NAME
				v_STAGE:=3300;
				v_MG_NAME:=NULL;
			 -- END OF MG_NAME
				
			 -- START OF MG_REL
				v_STAGE:=3400;
				v_MG_REL:=NULL;
			 -- END OF MG_REL
			 
			 -- START OF MINOR_BIRTH_DT
				v_STAGE:=3500;
				v_MINOR_BIRTH_DT:=NULL;
			 -- END OF MINOR_BIRTH_DT
			 
			 -- START OF DORMANT_TAG
				v_STAGE:=3600;
				v_DORMANT_TAG:=NULL;
			 -- END OF DORMANT_TAG
			 
			 -- START OF FLASH_MESSG
				v_STAGE:=3700;
				v_FLASH_MESSG:=NULL;
			 -- END OF FLASH_MESSG
			 
			  -- START OF TYPEOFAC
				v_STAGE:=3800;
				v_TYPEOFAC:=NULL;
			  -- END OF TYPEOFAC
			  
			  -- START OF INSTCODE
				v_STAGE:=3900;
				v_INSTCODE:=NULL;
			  -- END OF INSTCODE
			
	         -- START OF ISDEAF
				v_STAGE:=4000;
				v_ISDEAF:=NULL;
			 -- END OF ISDEAF
			 
			 -- START OF INT_UPTO_DT
				v_STAGE:=4100;
				v_INT_UPTO_DT:=NULL;
			 -- END OF INT_UPTO_DT
			 
			 -- START OF INT_ALLOW
				v_STAGE:=4200;
				v_INT_ALLOW:=NULL;
			 -- END OF INT_ALLOW
			
			  -- START OF OLD_ACTNO
				v_STAGE:=4300;
				v_OLD_ACTNO:=c_REC.AGENTNO ||' '|| c_REC.PGMCUSTNO;
			 -- END OF OLD_ACTNO
			 
			 -- START OF STP_TRAN
				v_STAGE:=4400;
				v_STP_TRAN:=NULL;
			 -- END OF STP_TRAN
			 
			 -- START OF SPC_AC
				v_STAGE:=4500;
				v_SPC_AC:=NULL;
			 -- END OF SPC_AC
			 
			 -- START OF SH_CIBIL
				v_STAGE:=4600;
				v_SH_CIBIL:=NULL;
			 -- END OF SH_CIBIL
			 
			 -- START OF WRTN_OFF_ST
				v_STAGE:=4700;
				v_WRTN_OFF_ST:=NULL;
			 -- END OF WRTN_OFF_ST
			 
			 -- START OF SUIT_FLD_ST
				v_STAGE:=4800;
				v_SUIT_FLD_ST:=NULL;
			 -- END OF SUIT_FLD_ST
			 
			 -- START OF CLOSE_DT
				v_STAGE:=4900;
				v_CLOSE_DT:=NULL;
			 -- END OF CLOSE_DT
			 
			  -- START OF TOTAL_WTN_OFF
				v_STAGE:=5000;
				v_TOTAL_WTN_OFF:=NULL;
			 -- END OF TOTAL_WTN_OFF 
			
			 
			  -- START OF PRN_WTN_OFF
				v_STAGE:=5100;
				v_PRN_WTN_OFF:=NULL;
			 -- END OF PRN_WTN_OFF
			 
			  -- START OF WTN_SETTL_AMT
				v_STAGE:=5200;
				v_WTN_SETTL_AMT:=NULL;
			 -- END OF WTN_SETTL_AMT
			 
			 -- START OF TBL_TYPE
				v_STAGE:=5300;
				v_TBL_TYPE:=NULL;
			 -- END OF TBL_TYPE
			 
			 -- START OF REF_KEY1
				v_STAGE:=5400;
				v_ROWNO:=c_REC.ROWNO;
			 -- END OF REF_KEY1
				
		
	-- CHECK ACTNO IS REPETED OR NOT
		BEGIN
			v_STAGE := 100003;		
			SELECT COUNT(*) INTO v_ExistCount FROM MASTER 
			WHERE ACTNO = v_ACTNO; -- CHECK DUPLICATE RECORD IF WE ARE TRUBLE IN ACTNO BUILDING SO 
			
				IF( v_ExistCount = 1) THEN 					
					UTL_FILE.PUTF(v_oFile_INSERT, '-ERROR ACTNO DUPLICATE STAGE#%s ROWNO#%s #%s\n',v_STAGE,c_REC.ROWNO,v_ACTNO );						
						v_DUPLICATE_REC_CNT := v_DUPLICATE_REC_CNT + 1;	
					GOTO SKIP_RECORD;
				END IF;
		EXCEPTION	
			WHEN OTHERS THEN
				NULL;
		END;	
	  -- End of ACTNO			
	v_STAGE  := 4200;
	BEGIN
		INSERT INTO MASTER VALUES 
		( 
			v_POST_UR_ID, --POST_UR_ID
			v_POST_UR_TIME, --POST_UR_TIME
			v_PASS_UR_ID, --PASS_UR_ID
			v_PASS_UR_TIME, --PASS_UR_TIME
			v_BR_CODE, --BR_CODE
			v_ACTNO, --ACTNO
			v_STATUS, --STATUS
			v_RSTATUS, --RSTATUS
			v_IR_NO, --IR_NO
			v_TRAN_DATE, --TRAN_DATE
			v_TRAN_NO, --TRAN_NO
			v_CATA_CODE, --CATA_CODE
			v_CUST_ID, --CUST_ID
			v_MINOR_CUSTID, --MINOR_CUST_ID
			v_SH_NAME, --SH_NAME
			v_LONG_NAME, --LONG_NAME
			v_F_NAME, --F_NAME
			v_M_NAME, --M_NAME 
			v_L_NAME, --L_NAME
			v_CONST_CODE, --CONST_CODE
			v_GUAR_NAME, --GUAR_NAME
			v_GUAR_REL, --GUAR_REL
			v_ATTACH_CODE, --ATTACH_CODE
			v_FREEZ_CODE, --FREEZ_CODE
			v_RISK_CATA, --RISK_CATA
			v_KYC_FLAG, --KYC_FLAG
			v_AC_OP_DATE, --AC_OP_DATE
			v_OPRN_MODE, --OPRN_MODE
			v_NPA_TAG, --NPA_TAG
			v_INTRO_ACTNO, --INTRO_ACTNO
			v_NOMI_NAME, --NOMI_NAME
			v_NOMI_REL, --NOMI_REL
			v_MINOR_TAG, --MINOR_TAG
			v_MG_NAME, --MG_NAME
			v_MG_REL, --MG_REL
			v_MINOR_BIRTH_DT, --MINOR_BIRTH_DT
			v_DORMANT_TAG, --DORMANT_TAG
			v_FLASH_MESSG, --FLASH_MESSG
			v_TYPEOFAC, --TYPEOFAC
			v_INSTCODE, --INSTCODE
			v_ISDEAF, --ISDEAF
			v_INT_UPTO_DT, --INT_UPTO_DT
			v_INT_ALLOW, --INT_ALLOW
			v_OLD_ACTNO,--OLD_ACTNO
			v_STP_TRAN, --STP_TRAN 
			v_SPC_AC, --SPC_AC
			v_SH_CIBIL, --SH_CIBIL
			v_WRTN_OFF_ST,
			v_SUIT_FLD_ST, 
			v_CLOSE_DT, --CLOSE_DT	
			v_TOTAL_WTN_OFF,
			v_PRN_WTN_OFF,
			v_WTN_SETTL_AMT,
			v_TBL_TYPE,
			c_REC.ROWNO -- REF_KEY1
		);		
		v_STAGE  := 4300;
	--  v_SUCCESS_COUNT 
		v_SUCCESS_COUNT := v_SUCCESS_COUNT + 1;
		
		UPDATE PGMCUSTMST SET BE_ACTNO=v_ACTNO WHERE TRIM(ROWNO)=TRIM(c_REC.ROWNO);
		COMMIT;
	--	UPDATE ACNTMST SET BE_CUST_ID=v_CUST_ID WHERE TRIM(ROWNO)=TRIM(c_REC.ROWNO);
	
		COMMIT;	
	EXCEPTION
		WHEN OTHERS THEN
			v_FAILURE_COUNT := v_FAILURE_COUNT + 1;
			UTL_FILE.PUTF(v_oFile_INSERT,'-ERROR IN MASTER INSERT STAGE##%s  SLCODE ::%s  Error-%s-%s\n',v_STAGE, c_REC.AGENTNO,SQLCODE,SQLERRM);				
	END;
	
	
		BEGIN
			/* 
			*	MODIFIED:DEVENDRA BHAIRAVKAR
			*	DATE-15-12-18
			*	DESCRIPTION: AVOID BANK ACCOUNTS INSERTION INTO CUSTREL AND SIGNAUTH.				
			*/
			
			
			IF( c_REC.BE_IAT != 'GLGN')THEN
				v_STAGE := 5000;
				INSERT INTO CUSTREL VALUES 
				( 
					v_ACTNO, --ACTNO
					NULL, --IR_NO
					v_CUST_ID, --CUST_ID
					1, --SR_NO
					c_REC.ROWNO -- REF_KEY1
				);
				
				v_STAGE := 6000;			
				-- WE ARE MAKE FIRST ENTRY HERE SO SR_NO = 1
				INSERT INTO SIGNAUTH VALUES 
				( 
					v_ACTNO, --ACTNO
					NULL, --IR_NO
					1, --SR_NO
					v_TRAN_DATE, --TRAN_DATE
					v_CUST_ID, --CUST_ID
					1, --CAPACITY
					NULL, --VALDATE
					c_REC.ROWNO -- REF_KEY1
				);	
				
			END IF;
		EXCEPTION
			WHEN OTHERS THEN
				UTL_FILE.PUTF(v_oFile_INSERT,'-ERROR IN SIGNAUTH INSERT STAGE##%s  AGENTNO ::%s Error-%s-%s\n',v_STAGE, c_REC.AGENTNO,SQLCODE,SQLERRM);
				
		END;			
			-- MAKE FIRST ENTRYS
	IF( v_IS_FIRST_ENTRY = TRUE ) THEN		
		v_IS_FIRST_ENTRY := FALSE;
		v_FIRST_ENTRY_CNT := v_FIRST_ENTRY_CNT + 1 ;
		--GOTO INSERT_SUB_RECORDS;		
	END IF;	
	-- END OF MAKE FIRST ENTRY
	
	<<SKIP_RECORD>>
		NULL;
	
	COMMIT;
	END LOOP;
		
	UTL_FILE.PUTF(v_oFile_INSERT,'\n-------INSERT ENDED: End Time %s-------%\n',TO_CHAR(SYSTIMESTAMP, 'HH12:MI:SS.FF4 AM'));
	UTL_FILE.FCLOSE(v_oFile_INSERT);
	UTL_FILE.PUTF(v_oFile,'-------SUMMARY : \n');
	UTL_FILE.PUTF(v_oFile,'-NO. OF RECORD PROCESS TO MASTER=%s\n',v_TOTAL_COUNT + v_FIRST_ENTRY_CNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF RECORDS ADDED TO MASTER=%s\n',v_SUCCESS_COUNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF RECORDS  FIRST_ENTRY CNT ADDED TO MASTER=%s\n', v_FIRST_ENTRY_CNT);	
	UTL_FILE.PUTF(v_oFile,'-NO. OF RECORDS  v_DUPLICATE_REC_CNT FAILED TO MASTER=%s\n', v_DUPLICATE_REC_CNT);	
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_SKIPPED_REC_CNT DUE TO GLMAP FAILURE =%s\n',v_SKIPPED_REC_CNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_ACTNO_NULL_CNT DUE TO GLMAP FAILURE =%s\n',v_ACTNO_NULL_CNT);	
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_SHARE_FAIL_CNT CNT =%s\n',v_SHARE_FAIL_CNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_SAVING_FAIL_CNT =%s\n',v_SAVING_FAIL_CNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_FD_FAILT_CNT =%s\n',v_FD_FAILT_CNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_RECU_FAIL_CNT =%s\n',v_RECU_FAIL_CNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_BANK_FAIL_CNT CNT =%s\n',v_BANK_FAIL_CNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_DAILY_FAIL_CNT CNT =%s\n',v_DAILY_FAIL_CNT);
	UTL_FILE.PUTF(v_oFile,'-NO. OF v_LOAN_FAIL_CNT CNT =%s\n',v_LOAN_FAIL_CNT);	
	UTL_FILE.PUTF(v_oFile,'-NO. OF FAILURES TO MASTER=%s\n',v_FAILURE_COUNT);	
	UTL_FILE.PUTF(v_oFile,'-------ACCOUNT INSERT : End Time %s-------%\n',TO_CHAR(SYSTIMESTAMP, 'HH12:MI:SS.FF4 AM'));
	UTL_FILE.FCLOSE(v_oFile);
EXCEPTION
	WHEN OTHERS THEN
	ROLLBACK;
	UPDATE CSV_CONFIG SET PROCESS_STATUS = 'N' WHERE STATUS='L';
	COMMIT;
	DBMS_OUTPUT.PUT_LINE('???????UNRECOVERABLE ERROR : STAGE# ' || v_STAGE || '-Error- ' || SQLCODE || '-' || SQLERRM || ' ROWNO#' || v_ROWNO );
	UTL_FILE.PUTF(v_oFile,'\n???????UNRECOVERABLE ERROR : STAGE#%s-Error-%s-%s, End Time %s-------%\n',v_STAGE,SQLCODE,SQLERRM,TO_CHAR(SYSTIMESTAMP, 'HH12:MI:SS.FF4 AM'));
	UTL_FILE.FCLOSE(v_oFile);
END;
/
